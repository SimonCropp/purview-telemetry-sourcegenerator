//HintName: Testing.TestMetricsCore.Metric.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Purview.Telemetry.SourceGenerator
//     on {Scrubbed}.
//
//     Changes to this file may cause incorrect behaviour and will be lost
//     when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

#nullable enable

namespace Testing
{
	sealed partial class TestMetricsCore : Testing.ITestMetrics
	{
		readonly System.Diagnostics.Metrics.IMeterFactory _meterFactory;

		readonly System.Diagnostics.Metrics.Counter<System.Int32> _counterInstrument;
		readonly System.Diagnostics.Metrics.Counter<System.Int32> _counter2Instrument;
		readonly System.Diagnostics.Metrics.Counter<System.Int32> _counter3Instrument;
		readonly System.Diagnostics.Metrics.Counter<System.Int32> _counter4Instrument;

		public TestMetricsCore(System.Diagnostics.Metrics.IMeterFactory meterFactory)
		{
			_meterFactory = meterFactory;

			System.Collections.Generic.Dictionary<string, object?> meterTags = new System.Collections.Generic.Dictionary<string, object?>();

			PopulateMeterTags(meterTags);

			System.Diagnostics.Metrics.Meter meter = meterFactory.Create(new System.Diagnostics.Metrics.MeterOptions("testing-meter")
			{
				Version = null,
				Tags = meterTags
			});

			_counterInstrument = meter.CreateCounter<System.Int32>(name: "Counter", unit: null, description: null, tags: null);
			_counter2Instrument = meter.CreateCounter<System.Int32>(name: "Counter2", unit: null, description: null, tags: null);
			_counter3Instrument = meter.CreateCounter<System.Int32>(name: "Counter3", unit: null, description: null, tags: null);
			_counter4Instrument = meter.CreateCounter<System.Int32>(name: "Counter4", unit: null, description: null, tags: null);
		}

		public void Counter(int counterValue, int intParam, bool boolParam)
		{
			System.Collections.Generic.Dictionary<string, object?> counterTagsList = new System.Collections.Generic.Dictionary<string, object?>();

			counterTagsList.Add("intparam", intParam);
			counterTagsList.Add("boolparam", boolParam);

			_counterInstrument.Add(counterValue, tags: counterTagsList);
		}

		public void Counter2(int intParam, bool boolParam)
		{
			System.Collections.Generic.Dictionary<string, object?> counter2TagsList = new System.Collections.Generic.Dictionary<string, object?>();

			counter2TagsList.Add("intparam", intParam);
			counter2TagsList.Add("boolparam", boolParam);

			_counter2Instrument.Add(1, tags: counter2TagsList);
		}

		public void Counter3(int intParam, bool boolParam)
		{
			System.Collections.Generic.Dictionary<string, object?> counter3TagsList = new System.Collections.Generic.Dictionary<string, object?>();

			counter3TagsList.Add("intparam", intParam);
			counter3TagsList.Add("boolparam", boolParam);

			_counter3Instrument.Add(1, tags: counter3TagsList);
		}

		public void Counter4(int counterValue, int intParam, bool boolParam)
		{
			System.Collections.Generic.Dictionary<string, object?> counter4TagsList = new System.Collections.Generic.Dictionary<string, object?>();

			counter4TagsList.Add("intparam", intParam);
			counter4TagsList.Add("boolparam", boolParam);

			_counter4Instrument.Add(counterValue, tags: counter4TagsList);
		}
	}
}
