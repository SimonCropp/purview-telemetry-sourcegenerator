//HintName: EntityStoreTelemetryCore.Logging.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Purview.Telemetry.SourceGenerator
//     on {Scrubbed}.
//
//     Changes to this file may cause incorrect behaviour and will be lost
//     when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

#nullable enable

sealed partial class EntityStoreTelemetryCore : IEntityStoreTelemetry
{
	readonly global::Microsoft.Extensions.Logging.ILogger<IEntityStoreTelemetry> _logger;

	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	public void LogMessage(int entityId, string updateState)
	{
		if (!_logger.IsEnabled(global::Microsoft.Extensions.Logging.LogLevel.Information))
		{
			return;
		}

		var state = global::Microsoft.Extensions.Logging.LoggerMessageHelper.ThreadLocalState;
		state.ReserveTagSpace(3);

		state.TagArray[0] = new("{OriginalFormat}", "LogMessage: EntityId = {EntityId}, UpdateState = {UpdateState}");
		state.TagArray[1] = new("entityId", entityId);
		state.TagArray[2] = new("updateState", updateState);

		_logger.Log(
			global::Microsoft.Extensions.Logging.LogLevel.Information,
			new (1180592680, "LogMessage"),
			state,
			null,
			// GENERATE CODEGEN ATTRIB
			static string (s, _) =>
			{
				var tmp0 = s.TagArray[0].Value ?? "(null)";
				var tmp1 = s.TagArray[1].Value ?? "(null)";
			// TODO!!
				return string.Empty;
			}
		);

		state.Clear();
	}


	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	public void ExplicitInfoMessage(int entityId, string updateState)
	{
		if (!_logger.IsEnabled(global::Microsoft.Extensions.Logging.LogLevel.Information))
		{
			return;
		}

		var state = global::Microsoft.Extensions.Logging.LoggerMessageHelper.ThreadLocalState;
		state.ReserveTagSpace(3);

		state.TagArray[0] = new("{OriginalFormat}", "ExplicitInfoMessage: EntityId = {EntityId}, UpdateState = {UpdateState}");
		state.TagArray[1] = new("entityId", entityId);
		state.TagArray[2] = new("updateState", updateState);

		_logger.Log(
			global::Microsoft.Extensions.Logging.LogLevel.Information,
			new (1861353128, "ExplicitInfoMessage"),
			state,
			null,
			// GENERATE CODEGEN ATTRIB
			static string (s, _) =>
			{
				var tmp0 = s.TagArray[0].Value ?? "(null)";
				var tmp1 = s.TagArray[1].Value ?? "(null)";
			// TODO!!
				return string.Empty;
			}
		);

		state.Clear();
	}


	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	public void ExplicitErrorMessage(int entityId, global::System.Exception exception)
	{
		if (!_logger.IsEnabled(global::Microsoft.Extensions.Logging.LogLevel.Error))
		{
			return;
		}

		var state = global::Microsoft.Extensions.Logging.LoggerMessageHelper.ThreadLocalState;
		state.ReserveTagSpace(1);

		state.TagArray[0] = new("{OriginalFormat}", "An explicit error message. The entity Id is {EntityId}, and the error is {Exception}.");
		state.TagArray[1] = new("entityId", entityId);

		_logger.Log(
			global::Microsoft.Extensions.Logging.LogLevel.Error,
			new (1928434156, "ExplicitErrorMessage"),
			state,
			exception,
			// GENERATE CODEGEN ATTRIB
			static string (s, e) =>
			{
				var tmp0 = s.TagArray[0].Value ?? "(null)";
			// TODO!!
				return string.Empty;
			}
		);

		state.Clear();
	}

}
