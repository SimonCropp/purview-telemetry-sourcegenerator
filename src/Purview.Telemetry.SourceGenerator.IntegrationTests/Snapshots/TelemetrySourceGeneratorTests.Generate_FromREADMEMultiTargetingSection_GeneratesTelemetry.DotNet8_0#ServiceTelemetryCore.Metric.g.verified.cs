//HintName: ServiceTelemetryCore.Metric.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Purview.Telemetry.SourceGenerator
//     on {Scrubbed}.
//
//     Changes to this file may cause incorrect behaviour and will be lost
//     when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

#nullable enable

sealed partial class ServiceTelemetryCore : IServiceTelemetry
{
	System.Diagnostics.Metrics.Meter _meter = default!;

	System.Diagnostics.Metrics.Counter<int>? _anAutoIncrementInstrument = null;

	public ServiceTelemetryCore(Microsoft.Extensions.Logging.ILogger<IServiceTelemetry> logger
#if NET8_0_OR_GREATER
, 		System.Diagnostics.Metrics.IMeterFactory meterFactory
#endif
	)
	{
		_logger = logger;
		InitializeMeters(
#if NET8_0_OR_GREATER
			meterFactory
#endif
		);
	}

	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	void InitializeMeters(
#if NET8_0_OR_GREATER
		System.Diagnostics.Metrics.IMeterFactory meterFactory
#endif
	)
	{
		if (_meter != null)
		{
			throw new System.Exception("The meters have already been initialized.");
		}

#if NET8_0_OR_GREATER
		System.Collections.Generic.Dictionary<string, object?> meterTags = new System.Collections.Generic.Dictionary<string, object?>();

		PopulateMeterTags(meterTags);
#endif

		_meter = 
#if NET8_0_OR_GREATER
			meterFactory.Create(new System.Diagnostics.Metrics.MeterOptions("ServiceTelemetry")
			{
				Version = null,
				Tags = meterTags
			});
#else
			new System.Diagnostics.Metrics.Meter(name: "ServiceTelemetry", version: null);
#endif

#if !NET7_0

		System.Collections.Generic.Dictionary<string, object?> anAutoIncrementTags = new System.Collections.Generic.Dictionary<string, object?>();

		PopulateAnAutoIncrementTags(anAutoIncrementTags);

#endif

		_anAutoIncrementInstrument = _meter.CreateCounter<int>(name: "anautoincrement", unit: null, description: null
#if !NET7_0
			, tags: anAutoIncrementTags
#endif
		);
	}

#if NET8_0_OR_GREATER

	partial void PopulateMeterTags(System.Collections.Generic.Dictionary<string, object?> meterTags);

#endif

#if !NET7_0

	partial void PopulateStartAnActivityTags(System.Collections.Generic.Dictionary<string, object?> instrumentTags);

	partial void PopulateAnInterestingEventTags(System.Collections.Generic.Dictionary<string, object?> instrumentTags);

	partial void PopulateInterestingInfoTags(System.Collections.Generic.Dictionary<string, object?> instrumentTags);

	partial void PopulateProcessingEntityTags(System.Collections.Generic.Dictionary<string, object?> instrumentTags);

	partial void PopulateAnAutoIncrementTags(System.Collections.Generic.Dictionary<string, object?> instrumentTags);

#endif

	[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
	public void AnAutoIncrement(int value)
	{
		if (_anAutoIncrementInstrument == null)
		{
			return;
		}

		System.Diagnostics.TagList anAutoIncrementTagList = new System.Diagnostics.TagList();

		anAutoIncrementTagList.Add("value", value);

		_anAutoIncrementInstrument.Add(1, tagList: anAutoIncrementTagList);
	}
}
