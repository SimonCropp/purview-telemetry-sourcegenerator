# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: publish
on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  push:
    branches:
      - 'main'       # Run the workflow when pushing to the main branch
  pull_request:
    branches:
      - '*'          # Run the workflow for all pull requests
  release:
    types:
      - published    # Run the workflow when a new GitHub release is published

env:
  POWERSHELL_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_NOLOGO: true

  SolutionPath: ./Purview.Telemetry.SourceGenerator.sln
  BuildConfigutation: Release
  NuGetDirectory: ${{ github.workspace }}/nuget

defaults:
  run:
    shell: pwsh -nop -noni
    working-directory: src

jobs:
  create_nuget:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Get all history to allow automatic versioning using MinVer
    
    - uses: actions/setup-dotnet@v4
      name: Setup .NET
      with:
        global-json-file: ./src/global.json
    
    - uses: dotnet/nbgv@master
      id: nbgv
    - run: echo 'SemVer2=${{ steps.nbgv.outputs.SemVer2 }}'
    
    - name: Pack NuGet packages
      run: dotnet pack ${{ env.SolutionPath }} --configuration ${{ env.BuildConfigutation }} --output ${{ env.NuGetDirectory }} --property:Version=${{ steps.nbgv.outputs.SemVer2 }} --include-symbols

    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg

  run_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: ./src/global.json
    
    - name: Run tests
      run: dotnet test ${{ env.SolutionPath }} --configuration ${{ env.BuildConfigutation }}

  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ run_test ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: ./src/global.json
          source-url: https://api.nuget.org/v3/index.json
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          run: dotnet nuget push ${{ env.NuGetDirectory }}/*.nupkg
